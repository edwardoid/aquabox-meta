FROM debian:buster

ENV DEBIAN_FRONTEND noninteractive

LABEL maintainer="Edward Sargsyan <edward.sarkisyan@gmail.com>"

ARG NODEJS_VERSION="10"
ARG IONIC_VERSION="4.2.1"
ARG ANDROID_SDK_VERSION="3859397"
ARG ANDROID_HOME="/opt/android-sdk"
ARG ANDROID_BUILD_TOOLS_VERSION="26.0.2"
ARG IDF_CLONE_URL=https://github.com/espressif/ESP8266_RTOS_SDK.git
ARG IDF_CLONE_BRANCH_OR_TAG=master
ARG IDF_CHECKOUT_REF=

USER root

RUN apt-get update --fix-missing && \
    apt-get install -y software-properties-common

RUN apt-add-repository 'deb http://security.debian.org/debian-security stretch/updates main' && \
    apt-get update --fix-missing && \
    apt-get install -y \
    wget libtool \
    intltool autoconf \
    automake \
    pkg-config make \
    tar vim ssh \
    python3 python3-pip git \
    sshpass tzdata unzip \
    gdb build-essential \
    curl \
    unzip \
    git \
    gradle \
    nodejs npm \
    openjdk-8-jre \
    openjdk-8-jdk \
    apt-utils \
    bison \
    ca-certificates \
    ccache \
    check \
    curl \
    flex \
    gperf \
    lcov \
    libncurses-dev \
    libusb-1.0-0-dev \
    make \
    ninja-build \
    unzip \
    wget \
    xz-utils \
    zip

RUN wget -q --show-progress https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-$(arch).sh &&  \
    chmod +x cmake-3.22.1-linux-$(arch).sh && \
    ./cmake-3.22.1-linux-$(arch).sh --skip-license --prefix=/usr

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 && \
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1

RUN pip install conan --upgrade

RUN wget -q --show-progress https://ipapi.co/timezone -O /timezone_info && \
    export TZ=$(cat /timezone_info) && \
    ln -sfn /usr/share/zoneinfo/$TZ /etc/timezone

RUN wget -q --show-progress https://liquidtelecom.dl.sourceforge.net/project/raspberry-pi-cross-compilers/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Buster/GCC%208.3.0/Raspberry%20Pi%201%2C%20Zero/cross-gcc-8.3.0-pi_0-1.tar.gz && \
    tar xf cross-gcc-8.3.0-pi_0-1.tar.gz && \
    mkdir -p /toolchain/armv6 && \
    cp -R cross-pi-gcc-8.3.0-0/* /toolchain/armv6 && \
    rm -rf cross-pi-gcc-8.3.0-0*

#RUN GRPC_VER="1.39.1" && PROTO_VER="v3.17.1" && \
#    git clone --recurse-submodules --depth=1 -b v${GRPC_VER} https://github.com/grpc/grpc && \
#    cd grpc && \
#    cd third_party/protobuf && \
#    git checkout $PROTO_VER && \
#    cd - && \
#    mkdir -p cmake/build && cd cmake/build && \
#    cmake -DCMAKE_BUILD_TYPE=Release -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DgRPC_SSL_PROVIDER=module ../.. && \
#    make && make install && \
#    cd ../../.. && \
#    rm -rf grpc


#RUN TOOLCHAIN="arm-linux-gnueabihf" && \
#    MAJOR="7.5" && \
#    MINOR="0" && \
#    DATE="2019.12" && \
#    ARCH="x86_64" && \
#    ARCHIVE_BASE="gcc-linaro-${MAJOR}.${MINOR}-${DATE}-${ARCH}_${TOOLCHAIN}" && \
#    ARCHIVE="$ARCHIVE_BASE.tar.xz" && \
#    MIRROR="https://releases.linaro.org/components/toolchain/binaries" && \
#    URL_PATH="${MIRROR}/${MAJOR}-${DATE}/${TOOLCHAIN}/${ARCHIVE}" && \
#    wget -q --show-progress $URL_PATH && \
#    tar -xJf $ARCHIVE && \
#    mkdir -p /toolchain/armv7 && \
#    mv $ARCHIVE_BASE/* /toolchain/armv7 && \
#    rm -rf $ARCHIVE_BASE && \
#    rm -rf $ARCHIVE

RUN conan profile new default --detect && \
    conan profile update settings.compiler.libcxx=libstdc++11 default && \
    conan profile update settings.build_type=Release default && \
    conan profile update settings.os=Linux default && \
    conan profile update settings.compiler.cppstd=14 default && \
    conan remote add aquabox http://aquabox.me:9300 False && \
    conan remote update conancenter https://center.conan.io False
    
RUN npm install -g cordova ionic@${IONIC_VERSION}

RUN python -m pip install --upgrade pip virtualenv


ARG IDF_CLONE_URL=https://github.com/espressif/ESP8266_RTOS_SDK.git
ARG IDF_CLONE_BRANCH_OR_TAG=master
ARG IDF_CHECKOUT_REF=

ENV IDF_PATH=/opt/esp/ESP8266_RTOS_SDK
ENV IDF_TOOLS_PATH=/opt/esp

RUN echo IDF_CHECKOUT_REF=$IDF_CHECKOUT_REF IDF_CLONE_BRANCH_OR_TAG=$IDF_CLONE_BRANCH_OR_TAG && \
    git clone --recursive \
      ${IDF_CLONE_BRANCH_OR_TAG:+-b $IDF_CLONE_BRANCH_OR_TAG} \
      $IDF_CLONE_URL $IDF_PATH && \
    if [ -n "$IDF_CHECKOUT_REF" ]; then \
      cd $IDF_PATH && \
      git checkout $IDF_CHECKOUT_REF && \
      git submodule update --init --recursive; \
    fi

# Install all the required tools, plus CMake
RUN  $IDF_PATH/tools/idf_tools.py --non-interactive install cmake \
  && $IDF_PATH/tools/idf_tools.py --non-interactive install xtensa-lx106-elf \
  && $IDF_PATH/tools/idf_tools.py --non-interactive install-python-env \
  && rm -rf $IDF_TOOLS_PATH/dist \
  && pip install -r $IDF_PATH/requirements.txt \
  && echo 'source $IDF_PATH/export.sh' >> /root/.bashrc \
  && echo 'source $IDF_PATH/export.sh' >> /root/.bash_profile

# Ccache is installed, enable it by default
ENV IDF_CCACHE_ENABLE=1

RUN mkdir /var/run/sshd

RUN echo 'root:root' |chpasswd

RUN sed -ri 's/^#?PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config

RUN mkdir /root/.ssh

RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

EXPOSE 22

CMD    ["/usr/sbin/sshd", "-D"]


