FROM node:18-buster

ENV DEBIAN_FRONTEND noninteractive

LABEL maintainer="Edward Sargsyan <edward.sarkisyan@gmail.com>"

USER root

RUN apt-get update --fix-missing && \
    apt-get install -y \
    wget aria2 libtool \
    intltool autoconf \
    automake \
    pkg-config make \
    tar vim ssh \
    python3 python3-pip git \
    sshpass tzdata unzip \
    gdb npm \
    software-properties-common \
    gradle \
    openjdk-11-jre \
    openjdk-11-jdk \
    sudo

RUN aria2c -x 16 -s 16 --check-certificate=false https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-$(arch).sh &&  \
    chmod +x cmake-3.22.1-linux-$(arch).sh && \
    ./cmake-3.22.1-linux-$(arch).sh --skip-license --prefix=/usr

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 && \
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1 && \
    pip install conan --upgrade

RUN wget -q https://ipapi.co/timezone -O /timezone_info && \
    export TZ=$(cat /timezone_info) && \
    ln -sfn /usr/share/zoneinfo/$TZ /etc/timezone

RUN aria2c -x 16 -s 16 --check-certificate=false https://liquidtelecom.dl.sourceforge.net/project/raspberry-pi-cross-compilers/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Buster/GCC%208.3.0/Raspberry%20Pi%201%2C%20Zero/cross-gcc-8.3.0-pi_0-1.tar.gz && \
    tar xf cross-gcc-8.3.0-pi_0-1.tar.gz && \
    mkdir -p /toolchain/armv6 && \
    cp -R cross-pi-gcc-8.3.0-0/* /toolchain/armv6 && \
    rm -rf cross-pi-gcc-8.3.0-0*

RUN GRPC_VER="1.39.1" && PROTO_VER="v3.17.1" && \
    git clone --recurse-submodules --depth=1 -b v${GRPC_VER} https://github.com/grpc/grpc && \
    cd grpc && \
    cd third_party/protobuf && \
    git checkout $PROTO_VER && \
    cd - && \
    mkdir -p cmake/build && cd cmake/build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DgRPC_SSL_PROVIDER=module ../.. && \
    make && make install && \
    cd ../../.. && \
    rm -rf grpc


RUN TOOLCHAIN="arm-linux-gnueabihf" && \
    MAJOR="7.5" && \
    MINOR="0" && \
    DATE="2019.12" && \
    ARCH="x86_64" && \
    ARCHIVE_BASE="gcc-linaro-${MAJOR}.${MINOR}-${DATE}-${ARCH}_${TOOLCHAIN}" && \
    ARCHIVE="$ARCHIVE_BASE.tar.xz" && \
    MIRROR="https://releases.linaro.org/components/toolchain/binaries" && \
    URL_PATH="${MIRROR}/${MAJOR}-${DATE}/${TOOLCHAIN}/${ARCHIVE}" && \
    aria2c -x 16 -s 16 --check-certificate=false $URL_PATH && \
    tar -xJf $ARCHIVE && \
    mkdir -p /toolchain/armv7 && \
    mv $ARCHIVE_BASE/* /toolchain/armv7 && \
    rm -rf $ARCHIVE_BASE && \
    rm -rf $ARCHIVE

RUN conan profile new default --detect && \
    conan profile update settings.compiler.libcxx=libstdc++11 default && \
    conan profile update settings.build_type=Release default && \
    conan profile update settings.os=Linux default && \
    conan profile update settings.compiler.cppstd=14 default && \
    conan remote add aquabox http://aquabox.me:9300 False && \
    conan remote update conancenter https://center.conan.io False

RUN git clone --depth=1 https://github.com/arduino/arduino-cli /tmp/arduino_cli && \
    ./tmp/arduino_cli/install.sh && \
    rm -rf /tmp/arduino_cli

#Install Tool chain for avr and sam
RUN aria2c -x 16 -s 16 --check-certificate=false https://git.fh-aachen.de/embeddedtools/embedded-tools-image/-/raw/master/install/arduino-cli.yaml -o /root/.arduino15/arduino-cli.yaml && \
    arduino-cli core update-index && \
    arduino-cli core install arduino:avr arduino:sam esp32:esp32 esp8266:esp8266
RUN arduino-cli lib install ESP8266Scheduler ESP_EEPROM "Adafruit SSD1306" "Adafruit GFX Library"


ENV IONIC_VERSION=6.18.0 \
    CORDOVA_VERSION=10.0.0 \
    ANDROID_HOME=/opt/android-sdk-linux \
    ANDROID_SDK_ROOT=/opt/android-sdk-linux \
    ANDROID_TOOLS_VERSION=r25.2.5 \
    ANDROID_API_LEVEL=android-27 \
    ANDROID_BUILD_TOOLS_VERSION=30.0.3 \
    APKTOOL_VERSION=2.5.0 \
    ANDROID_HOME=/opt/android-sdk-linux

RUN mkdir -p ${ANDROID_HOME} && \
    cd ${ANDROID_HOME} && \
    aria2c -x 16 -s 16 https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip -o android_tools.zip && \
    unzip android_tools.zip && \
    rm android_tools.zip && \
    mv cmdline-tools latest && \
    mkdir -p ${ANDROID_HOME}/sdk && \
    mkdir -p ${ANDROID_HOME}/sdk/cmdline-tools && \
    mv latest ${ANDROID_HOME}/sdk/cmdline-tools

ENV PATH ${PATH}:$ANDROID_SDK_ROOT/sdk/cmdline-tools/latest:$ANDROID_SDK_ROOT/sdk/cmdline-tools/latest/bin

RUN yes | sdkmanager --licenses

RUN sdkmanager	'platform-tools' \
		'platforms;android-32' \
		'build-tools;30.0.3' \
		'tools' \
		'extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2' \
		'extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2' \
		'extras;google;m2repository' \
		'extras;android;m2repository' \
		'extras;google;google_play_services'

RUN echo "Installing Ionic & Cordova" && \
    npm i -g @ionic/cli@${IONIC_VERSION} cordova@${CORDOVA_VERSION} cordova-res --unsafe-perm && \
    ionic --no-interactive config set -g daemon.updates false && \
    cordova telemetry off

RUN echo "Installing Apktool" && \
    wget -O /usr/local/bin/apktool -nv https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool && \
    wget -O /usr/local/bin/apktool.jar -nv https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_${APKTOOL_VERSION}.jar && \
    chmod +x /usr/local/bin/apktool.jar /usr/local/bin/apktool

RUN npm config set legacy-peer-deps true -g && \
    npm install -g @ionic/cli && \
    npm install -g @angular/cli@latest

RUN useradd -m aquabox -d /home/aquabox && echo "aquabox:aquabox" | chpasswd && adduser aquabox sudo

RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

USER aquabox

WORKDIR /home/aquabox
